namespace Lexicon.Common.Wpf.DependencyInjection.Abstractions.Services;
public interface ISettingsService
{
    Task Save(string key, bool value);
    Task Save(string key, bool? value);
    Task Save(string key, byte value);
    Task Save(string key, byte? value);
    Task Save(string key, char value);
    Task Save(string key, char? value);
    Task Save(string key, decimal value);
    Task Save(string key, decimal? value);
    Task Save(string key, double value);
    Task Save(string key, double? value);
    Task Save(string key, float value);
    Task Save(string key, float? value);
    Task Save(string key, int value);
    Task Save(string key, int? value);
    Task Save(string key, long value);
    Task Save(string key, long? value);
    Task Save(string key, sbyte value);
    Task Save(string key, sbyte? value);
    Task Save(string key, short value);
    Task Save(string key, short? value);
    Task Save(string key, string? value);
    Task Save(string key, System.Collections.Specialized.StringCollection? value);
    Task Save(string key, DateTime value);
    Task Save(string key, DateTime? value);
    Task Save(string key, System.Drawing.Color value);
    Task Save(string key, System.Drawing.Color? value);
    Task Save(string key, System.Drawing.Point value);
    Task Save(string key, System.Drawing.Point? value);
    Task Save(string key, System.Drawing.Size value);
    Task Save(string key, System.Drawing.Size? value);
    Task Save(string key, Guid value);
    Task Save(string key, Guid? value);
    Task Save(string key, TimeSpan value);
    Task Save(string key, TimeSpan? value);
    Task Save(string key, uint value);
    Task Save(string key, uint? value);
    Task Save(string key, ulong value);
    Task Save(string key, ulong? value);
    Task Save(string key, ushort value);
    Task Save(string key, ushort? value);
    Task BindAndSave<T>(T configuration) where T : class;
}
